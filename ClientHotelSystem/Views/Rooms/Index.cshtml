@model List<ClientHotelSystem.Models.Room>
@{
    ViewData["Title"] = "Our Rooms";
}

<!-- Page Header -->
<div class="page-header">
    <div class="container">
        <h1 class="page-title">Our Rooms</h1>
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Home</a></li>
                <li class="breadcrumb-item active">Rooms</li>
            </ol>
        </nav>
    </div>
</div>

<!-- Filter Section -->
<section class="section">
    <div class="container">
        <div class="filter-section">
            <h4 class="font-serif mb-4">Find Your Perfect Room</h4>
            <form method="get" action="@Url.Action("Index")">
                <div class="row">
                    <div class="col-lg-3 col-md-6 mb-3">
                        <label for="roomType" class="form-label">Room Type</label>
                        <input type="text" class="form-control" id="roomType" name="roomType" 
                               value="@ViewBag.CurrentFilters?.roomType" placeholder="e.g., Deluxe, Suite">
                    </div>
                    
                    <div class="col-lg-2 col-md-6 mb-3">
                        <label for="minPrice" class="form-label">Min Price</label>
                        <input type="number" class="form-control" id="minPrice" name="minPrice" 
                               value="@ViewBag.CurrentFilters?.minPrice" placeholder="$0" min="0" step="10">
                    </div>
                    
                    <div class="col-lg-2 col-md-6 mb-3">
                        <label for="maxPrice" class="form-label">Max Price</label>
                        <input type="number" class="form-control" id="maxPrice" name="maxPrice" 
                               value="@ViewBag.CurrentFilters?.maxPrice" placeholder="$1000" min="0" step="10">
                    </div>
                    
                    <div class="col-lg-2 col-md-6 mb-3">
                        <label for="capacity" class="form-label">Guests</label>
                        <select class="form-select" id="capacity" name="capacity">
                            <option value="">Any</option>
                            <option value="1" @(ViewBag.CurrentFilters?.capacity == 1 ? "selected" : "")>1 Guest</option>
                            <option value="2" @(ViewBag.CurrentFilters?.capacity == 2 ? "selected" : "")>2 Guests</option>
                            <option value="3" @(ViewBag.CurrentFilters?.capacity == 3 ? "selected" : "")>3 Guests</option>
                            <option value="4" @(ViewBag.CurrentFilters?.capacity == 4 ? "selected" : "")>4+ Guests</option>
                        </select>
                    </div>
                    
                    <div class="col-lg-3 col-md-12 mb-3 d-flex align-items-end gap-2">
                        <button type="submit" class="btn btn-primary flex-fill">
                            <i class="bi bi-search me-2"></i>Search
                        </button>
                        <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
                            <i class="bi bi-arrow-clockwise"></i>
                        </a>
                    </div>
                </div>
            </form>
        </div>
        
        <!-- Results Info -->
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h5 class="mb-0">@Model.Count Available Rooms</h5>
            <div class="d-flex gap-2">
                <button class="btn btn-outline-secondary btn-sm" onclick="toggleView('grid')" id="gridBtn">
                    <i class="bi bi-grid"></i>
                </button>
                <button class="btn btn-outline-secondary btn-sm" onclick="toggleView('list')" id="listBtn">
                    <i class="bi bi-list"></i>
                </button>
            </div>
        </div>
        
        <!-- Rooms Grid -->
        <div id="roomsGrid" class="row">
            @if (Model.Any())
            {
                @foreach (var room in Model)
                {
                    <div class="col-lg-4 col-md-6 mb-4">
                        <div class="card room-card h-100">
                            <div class="position-relative">
                                <img src="https://images.pexels.com/photos/271624/pexels-photo-271624.jpeg?auto=compress&cs=tinysrgb&w=400&h=250&fit=crop" 
                                     class="card-img-top" alt="@room.RoomTypeName">
                                <div class="room-price">@room.PricePerNight?.ToString("C")/night</div>
                                <div class="position-absolute top-0 start-0 m-3">
                                    <span class="badge bg-success">Available</span>
                                </div>
                            </div>
                            <div class="card-body d-flex flex-column">
                                <h5 class="card-title font-serif">@room.RoomTypeName</h5>
                                <p class="text-muted mb-3">Room @room.RoomNumber</p>
                                
                                <div class="room-features mb-3">
                                    <div class="feature-item">
                                        <i class="bi bi-people"></i>
                                        <span>Up to @room.Capacity Guests</span>
                                    </div>
                                    <div class="feature-item">
                                        <i class="bi bi-wifi"></i>
                                        <span>Free WiFi</span>
                                    </div>
                                    <div class="feature-item">
                                        <i class="bi bi-tv"></i>
                                        <span>Smart TV</span>
                                    </div>
                                </div>
                                
                                <div class="mt-auto">
                                    <div class="d-flex gap-2">
                                        <a href="@Url.Action("Details", new { id = room.RoomId })" 
                                           class="btn btn-outline-primary flex-fill">
                                            <i class="bi bi-eye me-1"></i>Details
                                        </a>
                                        <a href="@Url.Action("Create", "Booking", new { roomId = room.RoomId })" 
                                           class="btn btn-primary flex-fill">
                                            <i class="bi bi-calendar-check me-1"></i>Book Now
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="col-12">
                    <div class="text-center py-5">
                        <i class="bi bi-search" style="font-size: 4rem; color: #ccc;"></i>
                        <h4 class="mt-3 text-muted">No rooms found</h4>
                        <p class="text-muted">Try adjusting your search criteria or <a href="@Url.Action("Index")">view all rooms</a></p>
                    </div>
                </div>
            }
        </div>
        
        <!-- Rooms List View (Hidden by default) -->
        <div id="roomsList" class="d-none">
            @if (Model.Any())
            {
                @foreach (var room in Model)
                {
                    <div class="card mb-4">
                        <div class="row g-0">
                            <div class="col-md-4">
                                <img src="https://images.pexels.com/photos/271624/pexels-photo-271624.jpeg?auto=compress&cs=tinysrgb&w=400&h=250&fit=crop" 
                                     class="img-fluid h-100" alt="@room.RoomTypeName" style="object-fit: cover;">
                            </div>
                            <div class="col-md-8">
                                <div class="card-body h-100 d-flex flex-column">
                                    <div class="d-flex justify-content-between align-items-start mb-2">
                                        <h5 class="card-title font-serif mb-0">@room.RoomTypeName</h5>
                                        <div class="text-end">
                                            <div class="h5 text-primary mb-0">@room.PricePerNight?.ToString("C")</div>
                                            <small class="text-muted">per night</small>
                                        </div>
                                    </div>
                                    
                                    <p class="text-muted mb-3">Room @room.RoomNumber</p>
                                    
                                    <div class="room-features mb-3">
                                        <div class="feature-item">
                                            <i class="bi bi-people"></i>
                                            <span>Up to @room.Capacity Guests</span>
                                        </div>
                                        <div class="feature-item">
                                            <i class="bi bi-wifi"></i>
                                            <span>Free WiFi</span>
                                        </div>
                                        <div class="feature-item">
                                            <i class="bi bi-tv"></i>
                                            <span>Smart TV</span>
                                        </div>
                                        <div class="feature-item">
                                            <i class="bi bi-cup-hot"></i>
                                            <span>Coffee Maker</span>
                                        </div>
                                    </div>
                                    
                                    <div class="mt-auto">
                                        <div class="d-flex gap-2">
                                            <a href="@Url.Action("Details", new { id = room.RoomId })" 
                                               class="btn btn-outline-primary">
                                                <i class="bi bi-eye me-1"></i>View Details
                                            </a>
                                            <a href="@Url.Action("Create", "Booking", new { roomId = room.RoomId })" 
                                               class="btn btn-primary">
                                                <i class="bi bi-calendar-check me-1"></i>Book This Room
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
    </div>
</section>

<!-- Error Messages -->
@if (TempData["Error"] != null)
{
    <div class="position-fixed top-0 end-0 p-3" style="z-index: 1050;">
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-triangle me-2"></i>
            @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    </div>
}

@section Scripts {
<script>
    function toggleView(viewType) {
        const gridView = document.getElementById('roomsGrid');
        const listView = document.getElementById('roomsList');
        const gridBtn = document.getElementById('gridBtn');
        const listBtn = document.getElementById('listBtn');
        
        if (viewType === 'grid') {
            gridView.classList.remove('d-none');
            listView.classList.add('d-none');
            gridBtn.classList.add('btn-primary');
            gridBtn.classList.remove('btn-outline-secondary');
            listBtn.classList.add('btn-outline-secondary');
            listBtn.classList.remove('btn-primary');
        } else {
            gridView.classList.add('d-none');
            listView.classList.remove('d-none');
            listBtn.classList.add('btn-primary');
            listBtn.classList.remove('btn-outline-secondary');
            gridBtn.classList.add('btn-outline-secondary');
            gridBtn.classList.remove('btn-primary');
        }
    }
    
    // Initialize grid view as active
    document.getElementById('gridBtn').classList.add('btn-primary');
    document.getElementById('gridBtn').classList.remove('btn-outline-secondary');
</script>
}