@model FrontendHotelManagementSystem.Models.Room
@{
    ViewData["Title"] = Model.RoomId == 0 ? "Add Room" : "Edit Room";
}

<!-- Page Header -->
<div class="page-header d-flex justify-content-between align-items-center">
    <div>
        <h1 class="page-title">@ViewData["Title"]</h1>
        <p class="page-subtitle">@(Model.RoomId == 0 ? "Create a new room" : "Update room information")</p>
    </div>
    <a asp-action="Index" class="btn btn-secondary">
        <i class="bi bi-arrow-left me-2"></i>Back to List
    </a>
</div>

<!-- Error Alert -->
@if (TempData["Error"] != null)
{
    <div class="alert alert-danger" role="alert">
        <i class="bi bi-exclamation-triangle me-2"></i>
        @TempData["Error"]
    </div>
}

<!-- Room Form -->
<div class="form-container">
    <form asp-action="AddEdit" method="post">
        @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })
        <input type="hidden" asp-for="RoomId" />
        
        <div class="row">
            <div class="col-md-6 mb-3">
                <label asp-for="RoomNumber" class="form-label">
                    <i class="bi bi-door-open me-2"></i>Room Number
                </label>
                <input asp-for="RoomNumber" class="form-control" placeholder="Enter room number" />
                <span asp-validation-for="RoomNumber" class="text-danger"></span>
            </div>
            
            <div class="col-md-6 mb-3">
                <label asp-for="RoomTypeId" class="form-label">
                    <i class="bi bi-house me-2"></i>Room Type
                </label>
                <select asp-for="RoomTypeId" asp-items="ViewBag.RoomTypes" class="form-select">
                    <option value="">-- Select Room Type --</option>
                </select>
                <span asp-validation-for="RoomTypeId" class="text-danger"></span>
            </div>
        </div>
        
        <div class="row">
            <div class="col-md-6 mb-3">
                <label asp-for="Capacity" class="form-label">
                    <i class="bi bi-people me-2"></i>Capacity
                </label>
                <input asp-for="Capacity" class="form-control" type="number" min="1" max="20" placeholder="Number of guests" />
                <span asp-validation-for="Capacity" class="text-danger"></span>
            </div>
            
            <div class="col-md-6 mb-3">
                <label asp-for="PricePerNight" class="form-label">
                    <i class="bi bi-currency-dollar me-2"></i>Price Per Night
                </label>
                <input asp-for="PricePerNight" class="form-control" type="number" step="0.01" min="0" placeholder="0.00" />
                <span asp-validation-for="PricePerNight" class="text-danger"></span>
            </div>
        </div>
        
        <div class="mb-4">
            <div class="form-check form-switch">
                <input asp-for="IsAvaliable" class="form-check-input" type="checkbox" />
                <label asp-for="IsAvaliable" class="form-check-label">
                    <i class="bi bi-check-circle me-2"></i>Room is Available
                </label>
                <span asp-validation-for="IsAvaliable" class="text-danger"></span>
            </div>
            <div class="form-text">Toggle this switch to mark the room as available or occupied</div>
        </div>
        
        <div class="d-flex gap-3">
            <button type="submit" class="btn btn-primary">
                <i class="bi bi-check-circle me-2"></i>
                @(Model.RoomId == 0 ? "Create Room" : "Update Room")
            </button>
            <a asp-action="Index" class="btn btn-secondary">
                <i class="bi bi-x-circle me-2"></i>Cancel
            </a>
        </div>
    </form>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}